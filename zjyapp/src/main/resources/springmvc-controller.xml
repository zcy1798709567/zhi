<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/task
   		http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://code.alibabatech.com/schema/dubbo
		http://code.alibabatech.com/schema/dubbo/dubbo.xsd
		http://www.springframework.org/schema/websocket
		http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!-- 添加自定义参数绑定转换到转换器工厂Bean中 -->
	<bean id="conversionService"
		  class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<!-- 时间类型参数绑定转换 -->
				<bean class="com.oa.core.util.TimestampConverter"></bean>
				<!-- 日期类型参数绑定转换 -->
				<bean class="com.oa.core.util.DateConverter"></bean>
				<!-- 整数参数绑定转换 -->
				<bean class="com.oa.core.util.IntegerConverter"></bean>
			</set>
		</property>
	</bean>
	<!-- 扫描 @Controller -->
	<context:component-scan base-package="com.oa.core" />

    <!-- 使用websocket实现服务器消息实时推送 -->
    <bean id="websocket" class="com.oa.core.socket.WebsocketEndPoint" />
    <websocket:handlers>
        <websocket:mapping path="/websocket.do" handler="websocket"/>
        <websocket:handshake-interceptors>
            <bean class="com.oa.core.socket.HandshakeInterceptor" />
        </websocket:handshake-interceptors>
    </websocket:handlers>
	<!-- 处理器 映射器  适配器 -->
	<mvc:annotation-driven />

	<!-- 静态资源访问（不拦截此目录下的东西的访问） -->
    <mvc:resources location="/resources/" mapping="/resources/**"/>
	<mvc:resources location="/views/" mapping="/**/*.html"/>

	<!-- 视图解释器 jsp -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath">
			<value>/</value>
		</property>
	</bean>
	<bean id="htmlviewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix" value=".html" />
		<property name="order" value="0"></property>
		<property name="contentType" value="text/html;charset=UTF-8"></property>
	</bean>

	<bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes" >
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringConverter" />
				<ref bean="jsonConverter" />
			</list>
		</property>
	</bean>
	<!-- 附件上传-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760000" />
		<property name="maxInMemorySize" value="40960" />
	</bean>
	<!-- 配置拦截器-->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
		<bean class="com.oa.core.interceptor.LoginInterceptor"/>
		<!-- 登录拦截器-->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.oa.core.interceptor.TokenInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<bean id="SpringContextUtil " class="com.oa.core.util.SpringContextUtil" />
	<!-- 系统初始化 -->
	<bean id="initDataListener" class="com.oa.core.listener.InitDataListener"></bean>
	<!-- 定时任务：要求所有的定时任务在spring启动之后跟着启动 -->
	<bean init-method="addWarning" class="com.oa.core.system.warning.WarningSystem"></bean>

</beans>
